{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","imdbId","NewMovie","state","titleIsRequiredError","imgUrlIsRequiredError","imdbUrlIsRequiredError","imdbIdRequiredError","imgUrlError","imdbUrlError","isCanSubmit","submit","e","preventDefault","titleEmptyError","setIsEmptyError","imgEmptyError","setIsInvalidUrlError","imdbEmptyError","imdbUrlEmptyError","imdbIdEmptyError","setStateToField","newMovie","props","addMovie","setState","onChangeHandler","currentTarget","name","value","onBlurHandler","isFieldEmpty","isUrlIncorrect","nameOfFieldError","out","match","prevState","this","onSubmit","classNames","newMovie__form_input_error","type","onChange","onBlur","newMovie__form_submit_btn__disabled","Component","App","moviesFromServer","React","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4c3e4bec.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = Movie;\n\nexport const MovieCard: React.FC<Props> = ({\n  title, description, imgUrl, imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n","import {\n  Component,\n  SyntheticEvent,\n} from 'react';\nimport classNames from 'classnames';\n\nimport './NewMovie.scss';\n\ntype Props = {\n  addMovie: (movie: Movie) => void,\n};\n\ntype RequiredErrors = {\n  titleIsRequiredError: boolean,\n  imgUrlIsRequiredError: boolean,\n  imdbUrlIsRequiredError: boolean,\n  imdbIdRequiredError: boolean\n};\n\ntype IncorrectURLErrors = {\n  imgUrlError: boolean,\n  imdbUrlError: boolean,\n};\n\ntype State = RequiredErrors & IncorrectURLErrors & {\n  title: string,\n  description: string,\n  imgUrl: string,\n  imdbUrl: string,\n  imdbId: string,\n  isCanSubmit: boolean,\n};\n\nexport class NewMovie extends Component<Props, State> {\n  state: State = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n\n    titleIsRequiredError: false,\n    imgUrlIsRequiredError: false,\n    imdbUrlIsRequiredError: false,\n    imdbIdRequiredError: false,\n\n    imgUrlError: false,\n    imdbUrlError: false,\n\n    isCanSubmit: true,\n  };\n\n  submit = (e: SyntheticEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n    const {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    } = this.state;\n\n    const titleEmptyError = this.setIsEmptyError('title', title);\n\n    const imgEmptyError = this.setIsEmptyError('imgUrl', imgUrl);\n    const imgUrlError = this.setIsInvalidUrlError('imgUrl', imgUrl);\n\n    const imdbEmptyError = this.setIsEmptyError('imdbUrl', imdbUrl);\n    const imdbUrlEmptyError = this.setIsInvalidUrlError('imdbUrl', imdbUrl);\n\n    const imdbIdEmptyError = this.setIsEmptyError('imdbId', imdbId);\n\n    if (titleEmptyError\n      || imgEmptyError\n      || imgUrlError\n      || imdbEmptyError\n      || imdbUrlEmptyError\n      || imdbIdEmptyError) {\n      this.setStateToField('isCanSubmit', false);\n    } else {\n      this.setStateToField('isCanSubmit', true);\n      const newMovie = {\n        title,\n        description,\n        imgUrl,\n        imdbUrl,\n        imdbId,\n      };\n\n      this.props.addMovie(newMovie);\n      this.setState({\n        title: '',\n        description: '',\n        imgUrl: '',\n        imdbUrl: '',\n        imdbId: '',\n      });\n    }\n  };\n\n  onChangeHandler = (e: SyntheticEvent<HTMLInputElement>) => {\n    const { name, value } = e.currentTarget;\n\n    this.setStateToField(name, value);\n  };\n\n  onBlurHandler = (e: SyntheticEvent<HTMLInputElement>) => {\n    const { name, value } = e.currentTarget;\n\n    const isFieldEmpty = this.setIsEmptyError(name, value);\n    const isUrlIncorrect = this.setIsInvalidUrlError(name, value);\n\n    if (!isFieldEmpty && !isUrlIncorrect) {\n      this.setStateToField('isCanSubmit', true);\n    } else {\n      this.setStateToField('isCanSubmit', false);\n    }\n  };\n\n  setIsInvalidUrlError = (name: string, value: string) => {\n    let nameOfFieldError: keyof State;\n    // eslint-disable-next-line max-len\n    const patternURL = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/g;\n\n    switch (name) {\n      case 'imgUrl':\n        nameOfFieldError = 'imgUrlError';\n        break;\n\n      case 'imdbUrl':\n        nameOfFieldError = 'imdbUrlError';\n        break;\n\n      default:\n        return;\n    }\n\n    const out = !value.match(patternURL);\n\n    this.setStateToField(nameOfFieldError, out);\n\n    // eslint-disable-next-line consistent-return\n    return out;\n  };\n\n  setIsEmptyError = (name: string, value: string) => {\n    let nameOfFieldError: keyof State;\n\n    switch (name) {\n      case 'title':\n        nameOfFieldError = 'titleIsRequiredError';\n        break;\n\n      case 'imgUrl':\n        nameOfFieldError = 'imgUrlIsRequiredError';\n        break;\n\n      case 'imdbUrl':\n        nameOfFieldError = 'imdbUrlIsRequiredError';\n        break;\n\n      case 'imdbId':\n        nameOfFieldError = 'imdbIdRequiredError';\n        break;\n\n      default:\n        return;\n    }\n\n    const out = !value;\n\n    this.setStateToField(nameOfFieldError, out);\n\n    // eslint-disable-next-line consistent-return\n    return out;\n  };\n\n  setStateToField = (name: string, value: string | boolean) => {\n    this.setState((prevState) => ({\n      ...prevState,\n      [name]: value,\n    }));\n  };\n\n  render() {\n    const {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n\n      titleIsRequiredError,\n      imgUrlIsRequiredError,\n      imdbUrlIsRequiredError,\n      imdbIdRequiredError,\n\n      imgUrlError,\n      imdbUrlError,\n\n      isCanSubmit,\n    } = this.state;\n\n    return (\n      <form\n        onSubmit={this.submit}\n        className=\"newMovie\"\n      >\n        <h2 className=\"newMovie__title\">\n          Add new movie title\n        </h2>\n\n        <div>\n          <label className=\"newMovie__form-label\">\n            Title:\n            <input\n              className={\n                classNames(\n                  'newMovie__form_input',\n                  {\n                    newMovie__form_input_error: titleIsRequiredError,\n                  },\n                )\n              }\n              name=\"title\"\n              type=\"text\"\n              value={title}\n              onChange={this.onChangeHandler}\n              onBlur={this.onBlurHandler}\n            />\n          </label>\n          {titleIsRequiredError && <p>Title is required</p>}\n        </div>\n\n        <div>\n          <label className=\"newMovie__form-label\">\n            Description:\n            <input\n              className={\n                classNames(\n                  'newMovie__form_input',\n                )\n              }\n              name=\"description\"\n              type=\"text\"\n              value={description}\n              onChange={this.onChangeHandler}\n            />\n          </label>\n        </div>\n\n        <div>\n          <label className=\"newMovie__form-label\">\n            Image Url:\n            <input\n              className={\n                classNames(\n                  'newMovie__form_input',\n                  {\n                    newMovie__form_input_error:\n                      imgUrlIsRequiredError || imgUrlError,\n                  },\n                )\n              }\n              name=\"imgUrl\"\n              type=\"text\"\n              value={imgUrl}\n              onChange={this.onChangeHandler}\n              onBlur={this.onBlurHandler}\n            />\n          </label>\n          {imgUrlIsRequiredError && <p>ImgUrl is required</p>}\n          {imgUrlError && <p>ImgUrl is incorrect</p>}\n        </div>\n\n        <div>\n          <label className=\"newMovie__form-label\">\n            IMDB Url:\n            <input\n              className={\n                classNames(\n                  'newMovie__form_input',\n                  {\n                    newMovie__form_input_error:\n                      imdbUrlIsRequiredError || imdbUrlError,\n                  },\n                )\n              }\n              name=\"imdbUrl\"\n              type=\"text\"\n              value={imdbUrl}\n              onChange={this.onChangeHandler}\n              onBlur={this.onBlurHandler}\n            />\n          </label>\n          {imdbUrlIsRequiredError && <p>ImdbUrl is required</p>}\n          {imdbUrlError && <p>ImdbUrl is incorrect</p>}\n        </div>\n\n        <div>\n          <label className=\"newMovie__form-label\">\n            IMDB Id:\n            <input\n              className={\n                classNames(\n                  'newMovie__form_input',\n                  {\n                    newMovie__form_input_error: imdbIdRequiredError,\n                  },\n                )\n              }\n              name=\"imdbId\"\n              type=\"text\"\n              value={imdbId}\n              onChange={this.onChangeHandler}\n              onBlur={this.onBlurHandler}\n            />\n          </label>\n          {imdbIdRequiredError && <p>ImdbId is required</p>}\n        </div>\n\n        <div>\n          <button\n            className={\n              classNames(\n                'newMovie__form_submit_btn',\n                {\n                  newMovie__form_submit_btn__disabled: !isCanSubmit,\n                },\n              )\n            }\n            type=\"submit\"\n          >\n            Create movie Title\n          </button>\n        </div>\n      </form>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\ninterface State {\n  movies: Movie[];\n}\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie: Movie) => {\n    this.setState((prevState) => (\n      {\n        movies: [\n          ...prevState.movies,\n          movie,\n        ],\n      }\n    ));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie addMovie={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}